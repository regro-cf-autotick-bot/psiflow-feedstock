{% set name = "psiflow" %}
{% set version = "4.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/molmod/psiflow/archive/v{{ version }}.tar.gz
  sha256: e09deb0c6bfea58bde808299f507d6f962d6ac3b4e4fe03b6c2598678f8d498e

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0
  entry_points:
    - psiflow-train-nequip = psiflow.models.train_nequip:main
    - psiflow-deploy-nequip = psiflow.models.deploy_nequip:main
    - psiflow-train-mace = psiflow.models.train_mace:main
    - psiflow-md-yaff = psiflow.walkers.molecular_dynamics_yaff:main
    - psiflow-md-openmm = psiflow.walkers.molecular_dynamics_openmm:main
    - psiflow-test = psiflow.test:main

requirements:
  build:
  host:
    - python >=3.6
    - pip
  run:
    - cp2k-input-tools
    - prettytable
    - psutil
    - pytimeparse
    - python >=3.6
    - ase >=3.23.0
    - pyyaml >=6.0
    - numpy >=1.22.3,<2
    - wandb >=0.14.0
    - pymatgen >=2023.3.23
    - parsl >=2024.12.16

test:
  imports:
    - psiflow
  requires:
    - pip
    - pytorch
    - e3nn
    - nequip
    - torch-ema
    - pymace
    - yaff
    - mdtraj
    - openmm
    - openmm-ml
    - colorcet
    - cp2k-input-tools
  commands:
    - pip check
    - psiflow-train-nequip --help
    # - psiflow-deploy-nequip --help  # import fails: from nequip.utils.misc import dtype_to_name
    # - psiflow-train-mace --help  # import fails: from mace.tools.scripts_utils import LRScheduler
    - psiflow-md-yaff --help
    - psiflow-md-openmm --help
    # - psiflow-test --help  # AssertionError: assert path_config.is_file()

about:
  home: https://molmod.github.io/psiflow
  summary: 'Interatomic potential development library'
  description: |
    Psiflow is a modular and scalable library for developing interatomic 
    potentials. It uses Parsl to interface popular trainable interaction
    potentials with quantum chemistry software, and is designed to support
    computational workflows on hundreds or thousands of nodes. Psiflow is
    designed as an end-to-end framework; it can orchestrate all 
    computational components between an initial atomic structure and the 
    final trained potential.
  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://molmod.github.io/psiflow
  dev_url: https://github.com/molmod/psiflow

extra:
  recipe-maintainers:
    - jan-janssen
